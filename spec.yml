openapi: 3.0.0
info:
  title: MR Management System
  description: "![](https://i.ibb.co/v3Yt03v/todo-api-background.png)\n\n## \U0001F4AB Overview\n\nTo Do API provides a simple way for people to manage their tasks and plan their day. This API can be used to create mobile and web applications.This API is documented using **OpenAPI 3.0**. The implementation lives in this [GitHub repo](https://github.com/stoplightio/studio-demo/blob/master/reference/todos/todo.v1.yaml).\n\n### \U0001F9F0 Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/). CORS support is necessary to make calls from the request maker within the API docs.\n\n### \U0001F3C1 Trying out your own API Specification\nElements can be used to generate API docs for any OpenAPI document. Replace this OpenAPI with a URL to your own OpenAPI document to get started."
  license:
    name: ISC
    url: "https://spdx.org/licenses/ISC"
servers:
  - description: Production
    url: "https://jp1.kevinsandiho.cyou/api/mr"
    description: Production
  - description: Development
    url: "https://api.node.test"
  version: 1.0.0
paths:
  /admin/role:
    post:
      tags:
        - role
      summary: Create New Role
      requestBody:
        description: Role Information for new object data
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/role"
        required: true
      responses:
        200:
          description: Roles created successfuly
          content: {}
        401:
          description:
            "Unauthorized. Cause: either user session expired or malfunctioned
            bearer token"
          content: {}
        403:
          description:
            "Forbidden. Cause: user don't have enough authority (not an
            admin)"
          content: {}
      x-codegen-request-body-name: body
components:
  schemas:
    role:
      required:
        - name
      type: object
      properties:
        _id:
          type: string
          description: Auto-generated unique role IDs
        name:
          type: string
          description: Role name (Must unique)
        accessNode:
          type: object
          properties:
            nodeName:
              type: string
          description: List of allowed node
        accessLevel:
          type: string
          description: Role access level, the value is either 'standard' or 'admin'
          enum:
            - standard
            - admin
        createdAt:
          type: string
          description: Auto-generated object creation time
          format: date-time
        updatedAt:
          type: string
          description: Auto-generated object creation time
          format: date-time
